
# 1. Создание переменных и вывод значений
Name = "Ибрагим"
Age = 27
height = 188.0
print(f"Меня зовут {Name}, мне {Age} лет, мой рост {height}")

# 2. Изменение значений переменных
x = 10
print(type(x))
x = 25.5
print(type(x))
x = "Python"
print(type(x))
print(x)

# 3. Копирование ссылок
a = 7
b = a
print(id(a))
print(id(a))
a = 10
print(b)
# Значение b не изменилось, потому что мы присвоили ее объекту раньше, чем изменили значение a, b ссылается
# на старый объект а, когда он был 7, а не 10.

# 4. Каскадное присваивание
x,y,z = 100,100,100
print(x,y,z)
print(id(x))
print(id(y))
print(id(z))
# ID одинаковые, потому что значения одинаковые и питон экономит память
x,y,z = 1,2,3
print(x,y,z)
print(id(x))
print(id(y))
print(id(z))
# ID разные, потому что разные значения.

# 5. Обмен значений переменных
a, b = 5, 10
a, b = b, a
print(a,b)

# 6. Работа с именами переменных
# True = 1
# print = 4
# if = 22
# При использовании переменных с системными названиями выдается ошибка.
# Переменные нельзя так называть, потому что они зарезервированы под конкретные функции, если бы их можно было так
# называть, то это вызвало бы путанницу и множественные ошибки
import keyword
print(keyword.kwlist)

# 7. Использование функции type()
# ======================================

var1 = 42
var2 = 3.14
var3 = "Hello"
print(type(var1))
print(type(var2))
print(type(var3))
var1= "Строка"
print(type(var1))


# 8. Дополнительные задания
a, b, c, d, e = 1, 1.1, "Строка", 2, 2.2
print(a,b,c,d,e)
print(type(a))
print(type(b))
print(type(c))
print(type(d))
print(type(e))
Цифра = 10
print(Цифра)
# Не работает, русская переменная не выводится

